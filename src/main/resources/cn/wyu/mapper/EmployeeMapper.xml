<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wyu.dao.EmployeeMapper">
  <resultMap id="BaseResultMap" type="cn.wyu.pojo.Employee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="dept_id" jdbcType="INTEGER" property="deptId" />
    <result column="job_id" jdbcType="INTEGER" property="jobId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="card_id" jdbcType="VARCHAR" property="cardId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="post_code" jdbcType="VARCHAR" property="postCode" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="qq_num" jdbcType="VARCHAR" property="qqNum" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="party" jdbcType="VARCHAR" property="party" />
    <result column="brithday" jdbcType="DATE" property="brithday" />
    <result column="race" jdbcType="VARCHAR" property="race" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="speciality" jdbcType="VARCHAR" property="speciality" />
  </resultMap>


  <resultMap id="ResultMapWithExample" type="cn.wyu.pojo.Employee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="dept_id" jdbcType="INTEGER" property="deptId" />
    <result column="job_id" jdbcType="INTEGER" property="jobId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="card_id" jdbcType="VARCHAR" property="cardId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="post_code" jdbcType="VARCHAR" property="postCode" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="qq_num" jdbcType="VARCHAR" property="qqNum" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="party" jdbcType="VARCHAR" property="party" />
    <result column="brithday" jdbcType="DATE" property="brithday" />
    <result column="race" jdbcType="VARCHAR" property="race" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="speciality" jdbcType="VARCHAR" property="speciality" />
    <association property="job" javaType="cn.wyu.pojo.Job">
      <id column="jid" property="id"></id>
      <result column="jname" property="name" jdbcType="VARCHAR"></result>
    </association>
    <association property="dept" javaType="cn.wyu.pojo.Dept">
      <id column="did" property="id"></id>
      <result column="dname" property="name" jdbcType="VARCHAR"></result>
    </association>
  </resultMap>



<sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Base_Column_List_With_Example">
    e.id, e.dept_id, e.job_id, e.name, e.card_id, e.address, e.post_code, e.tel, e.phone, e.qq_num, e.email,
    e.sex, e.party, e.brithday, e.race, e.education, e.speciality,j.id as jid,j.name as jname,d.id as did,d.name as dname
  </sql>

  <sql id="Base_Column_List">
    id, dept_id, job_id, name, card_id, address, post_code, tel, phone, qq_num, email, 
    sex, party, brithday, race, education, speciality
  </sql>


  <select id="selectWithExample" parameterType="cn.wyu.pojo.Employee" resultMap="ResultMapWithExample">
    select
    <include refid="Base_Column_List_With_Example"/>
    from employee e
    left join job j on e.job_id=j.id
    left join dept d on e.dept_id=d.id
    where 1=1
    <if test="name != null">
      <if test="name !=''">
        and e.name LIKE CONCAT(CONCAT('%',#{name},'%'))
      </if>
    </if>
    <if test="deptId !=0">
      and e.dept_id = #{deptId,jdbcType=INTEGER}
    </if>
    <if test="jobId !=0">
      and e.job_id = #{jobId,jdbcType=INTEGER}
    </if>
    <if test="sex !=0">
      and e.sex = #{sex,jdbcType=INTEGER}
    </if>
    order by e.id asc
  </select>

  <select id="selectByExample" parameterType="cn.wyu.pojo.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.wyu.pojo.EmployeeExample">
    delete from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.wyu.pojo.Employee">
    insert into employee (id, dept_id, job_id, 
      name, card_id, address, 
      post_code, tel, phone, 
      qq_num, email, sex, 
      party, brithday, race, 
      education, speciality)
    values (#{id,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, #{jobId,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{cardId,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{postCode,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{qqNum,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{party,jdbcType=VARCHAR}, #{brithday,jdbcType=DATE}, #{race,jdbcType=VARCHAR}, 
      #{education,jdbcType=VARCHAR}, #{speciality,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.wyu.pojo.Employee">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="jobId != null">
        job_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="cardId != null">
        card_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="postCode != null">
        post_code,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="qqNum != null">
        qq_num,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="party != null">
        party,
      </if>
      <if test="brithday != null">
        brithday,
      </if>
      <if test="race != null">
        race,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="speciality != null">
        speciality,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="jobId != null">
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="cardId != null">
        #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="postCode != null">
        #{postCode,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="qqNum != null">
        #{qqNum,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="party != null">
        #{party,jdbcType=VARCHAR},
      </if>
      <if test="brithday != null">
        #{brithday,jdbcType=DATE},
      </if>
      <if test="race != null">
        #{race,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="speciality != null">
        #{speciality,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.wyu.pojo.EmployeeExample" resultType="java.lang.Long">
    select count(*) from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employee
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.deptId != null">
        dept_id = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.jobId != null">
        job_id = #{record.jobId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.cardId != null">
        card_id = #{record.cardId,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.postCode != null">
        post_code = #{record.postCode,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.qqNum != null">
        qq_num = #{record.qqNum,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.party != null">
        party = #{record.party,jdbcType=VARCHAR},
      </if>
      <if test="record.brithday != null">
        brithday = #{record.brithday,jdbcType=DATE},
      </if>
      <if test="record.race != null">
        race = #{record.race,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.speciality != null">
        speciality = #{record.speciality,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employee
    set id = #{record.id,jdbcType=INTEGER},
      dept_id = #{record.deptId,jdbcType=INTEGER},
      job_id = #{record.jobId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      card_id = #{record.cardId,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      post_code = #{record.postCode,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      qq_num = #{record.qqNum,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      party = #{record.party,jdbcType=VARCHAR},
      brithday = #{record.brithday,jdbcType=DATE},
      race = #{record.race,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=VARCHAR},
      speciality = #{record.speciality,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.wyu.pojo.Employee">
    update employee
    <set>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="jobId != null">
        job_id = #{jobId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="cardId != null">
        card_id = #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="postCode != null">
        post_code = #{postCode,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="qqNum != null">
        qq_num = #{qqNum,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="party != null">
        party = #{party,jdbcType=VARCHAR},
      </if>
      <if test="brithday != null">
        brithday = #{brithday,jdbcType=DATE},
      </if>
      <if test="race != null">
        race = #{race,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="speciality != null">
        speciality = #{speciality,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.wyu.pojo.Employee">
    update employee
    set dept_id = #{deptId,jdbcType=INTEGER},
      job_id = #{jobId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      card_id = #{cardId,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      post_code = #{postCode,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      qq_num = #{qqNum,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      party = #{party,jdbcType=VARCHAR},
      brithday = #{brithday,jdbcType=DATE},
      race = #{race,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      speciality = #{speciality,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>